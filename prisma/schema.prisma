datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AuthProvider {
  DEFAULT
  DISCORD
  GITHUB
}

enum PlantType {
  NONE
  TOMATO
  POTATO
  CARROT
  ONION
  CUCUMBER
  PEPPER
  PEA
  BROCCOLI
  CABBAGE
  CORN
  BEAN
  BEET
  CELERY
  EGGPLANT
  GARLIC
  GINGER
  GREEN_BEAN
  KALE
  LETTUCE
  MUSTARD
}

// MODELS
model User {
  uuid         String       @id @default(cuid())
  oauthId      String       @unique
  username     String       @unique
  description  String       @default("")
  avatar       String
  authProvider AuthProvider @default(DEFAULT)

  // Plots
  plots Plot[]

  accessToken  String
  refreshToken String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Plant {
  // Plant caracteristics
  uuid             String            @id @default(cuid())
  name             String
  scientificName   String
  description      String            @default("")
  variety          String
  type             PlantType
  requirements     PlantRequirements @relation(fields: [requirementsUuid], references: [uuid])
  requirementsUuid String
  image            String?

  // Common Diseases
  diseases Disease[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserPlant {
  uuid           String    @id @default(cuid())
  name           String
  scientificName String
  variety        String
  type           PlantType
  image          String?

  plantedSeedsOn  DateTime?
  seedsSproutedOn DateTime?

  // Plot relation.
  plot     Plot?              @relation(fields: [plotUuid], references: [uuid])
  plotUuid String?
  // Plant harvests.
  harvests Harvest[]
  // Registered diseases.
  diseases DiseasesOnPlants[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlantRequirements {
  uuid        String  @id @default(cuid())
  soil        String
  light       String
  water       String
  temperature String
  // Information plant relation model.
  plant       Plant[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Plot {
  // Plot characteristics.
  uuid      String      @id @default(cuid())
  name      String?     @default("Plot")
  sizeX     Float       @default(0)
  sizeY     Float       @default(0)
  dirtDepth Float       @default(0)
  image     String?
  // User plants in the plot.
  plants    UserPlant[]

  // User relation
  user     User?   @relation(fields: [userUuid], references: [uuid])
  userUuid String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DiseasesOnPlants {
  plant       UserPlant @relation(fields: [plantUuid], references: [uuid])
  plantUuid   String
  disease     Disease   @relation(fields: [diseaseUuid], references: [uuid])
  diseaseUuid String

  @@id([plantUuid, diseaseUuid])
}

// Plant harvest model.
model Harvest {
  // Harvest data
  uuid            String   @id @default(cuid())
  amountHarvested Int      @default(0)
  harvestWeight   Float    @default(0)
  harvestedOn     DateTime @default(now())

  // Plant relation.
  plant     UserPlant? @relation(fields: [plantUuid], references: [uuid])
  plantUuid String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Disease {
  uuid           String  @id @default(cuid())
  scientificName String
  description    String
  image          String?

  // Relation used by informational plant model. One to Many.
  plant     Plant?  @relation(fields: [plantUuid], references: [uuid])
  plantUuid String?

  // Relation used by user plant model. Many to Many.
  userPlants DiseasesOnPlants[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
